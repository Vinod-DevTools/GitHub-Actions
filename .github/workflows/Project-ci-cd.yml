
name: Node CI + Build + Upload to Artifactory + AWS Deploy

on:
 # push:
  #  branches: [main]
 # pull_request:
#  branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install
      - run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install --omit=dev
      - run: npm pack                   # âžœ simple-calculator-x.y.z.tgz

      - name: Upload tarball for later jobs
        uses: actions/upload-artifact@v4
        with:
          name: calculator-tarball
          path: "*.tgz"
          if-no-files-found: error


  upload-artifact:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download tarball from build
        uses: actions/download-artifact@v4
        with:
          name: calculator-tarball
          path: ./dist

      - name: Push tarball to Artifactory
        env:
          ARTIFACTORY_URL:       ${{ secrets.ARTIFACTORY_URL }}
          ARTIFACTORY_REPO:      ${{ secrets.ARTIFACTORY_REPO }}
          ARTIFACTORY_USER:      ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD:  ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          cd dist
          FILE=$(ls *.tgz | head -n 1)
          echo "Uploading $FILE to Artifactory ..."
          curl -f -u "${ARTIFACTORY_USER}:${ARTIFACTORY_PASSWORD}" \
               -T "$FILE" \
               "${ARTIFACTORY_URL}/artifactory/${ARTIFACTORY_REPO}/$FILE"


  deploy:
    needs: upload-artifact
    runs-on: ubuntu-latest
    steps:
      - name: Download tarball for deployment
        uses: actions/download-artifact@v4
        with:
          name: calculator-tarball
          path: ./dist

      - name: Extract tarball
        run: |
          mkdir -p ./deploy
          tar -xzf ./dist/*.tgz -C ./deploy --strip-components=1

      - name: Load EC2 SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AWS_EC2_SSH_KEY }}

      - name: Rsync to EC2
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --delete ./deploy/ \
            ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }}:${{ secrets.AWS_EC2_PATH }}/

      - name: Bootstrap VM & start app
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} <<'EOF'
            set -e
            cd ${{ secrets.AWS_EC2_PATH }}

            # Install Node 20 if not present
            if ! command -v node >/dev/null 2>&1; then
              echo "Installing Node 20 ..."
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Install PM2 if missing
            if ! command -v pm2 >/dev/null 2>&1; then
              sudo npm install -g pm2
            fi

            # Install app dependencies
            npm install --omit=dev

            # Start or reload the app
            pm2 reload calculator || pm2 start app.js --name calculator --time
            pm2 save
          EOF
